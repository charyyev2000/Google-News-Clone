{"version":3,"sources":["features/userSlice.js","components/Blogs.js","components/HomePage.js","components/Navbar.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setSearchInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","Blogs","useState","data","setData","loading","setLoading","useSelector","url","dispatch","useDispatch","useEffect","axios","get","then","res","console","log","catch","err","className","articles","map","item","i","href","target","src","image","alt","title","source","publishedAt","description","totalArticles","HomePage","login","response","profileObj","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","Navbar","inputValue","setInputValue","type","placeholder","value","onChange","e","preventDefault","Avatar","imageUrl","givenName","buttonText","onLogoutSuccess","App","configureStore","reducer","userReducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.00352219.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isSignedIn: false,\r\n    userData: null,\r\n    searchInput: \"tech\",\r\n    blogData: null\r\n  },\r\n  reducers: {\r\n    setSignedIn: (state, action) => {\r\n      state.isSignedIn = action.payload;\r\n    },\r\n    setUserData: (state, action) => {\r\n      state.userData = action.payload;\r\n    },\r\n    setSearchInput: (state, action) => {\r\n      state.searchInput = action.payload;\r\n    },\r\n    setBlogData: (state, action) => {\r\n      state.blogData = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setSignedIn, setUserData, setSearchInput, setBlogData } =\r\n  userSlice.actions;\r\n\r\nexport const selectSignedIn = (state) => state.user.isSignedIn;\r\nexport const selectUserData = (state) => state.user.userData;\r\nexport const selectUserInput = (state) => state.user.searchInput;\r\nexport const selectBlogData = (state) => state.user.blogData;\r\n\r\nexport default userSlice.reducer;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserInput, setBlogData } from \"../features/userSlice\";\r\nimport \"../styling/blogs.css\";\r\n\r\nconst Blogs = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const searchInput = useSelector(selectUserInput);\r\n\r\n  const url = `https://gnews.io/api/v4/search?q=${searchInput}&token=e70951a5f6667773d450600011a05486\r\n    `;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        dispatch(setBlogData(res.data));\r\n        setData(res.data);\r\n        console.log(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [searchInput]);\r\n  return (\r\n    <div className=\"blog__page\">\r\n      <h1 className=\"blog__page__header\">Blogs</h1>\r\n      {loading ? <h1 className=\"loading\">Loading</h1> : \"\"}\r\n      <div className=\"blogs\">\r\n        {data?.articles?.map((item, i) => (\r\n          <a key={i} href={item.url} className=\"blog\" target=\"_blank\">\r\n            <img src={item.image} alt={item.title} />\r\n            <div>\r\n              <h3 className=\"sourceName\">\r\n                <span>{item.source.name}</span>\r\n                <p>{item.publishedAt}</p>\r\n              </h3>\r\n              <h1>{item.title}</h1>\r\n              <p>{item.description}</p>\r\n            </div>\r\n          </a>\r\n        ))}\r\n\r\n        {data.totalArticles == 0 && (\r\n          <h1 className=\"no__blogs\">No blogs available</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import React from \"react\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectSignedIn,\r\n  selectUserData,\r\n  setSignedIn,\r\n  setUserData\r\n} from \"../features/userSlice\";\r\nimport \"../styling/home.css\";\r\n\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Blogs from \"./Blogs\";\r\n\r\nconst HomePage = () => {\r\n  const login = (response) => {\r\n    console.log(response);\r\n    dispatch(setSignedIn(true));\r\n    dispatch(setUserData(response.profileObj));\r\n  };\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector(selectUserData);\r\n\r\n  const isSignedIn = useSelector(selectSignedIn);\r\n\r\n  return (\r\n    <div className=\"home__page\" style={{ display: isSignedIn ? \"none\" : \"\" }}>\r\n      {!isSignedIn ? (\r\n        <div className=\"login__message\">\r\n          <h1>A Readers favourite place!</h1>\r\n          <p>\r\n            We provide high quality online resource for reading blogs. Just sign\r\n            up and start reading some quality blogs\r\n          </p>\r\n          <GoogleLogin\r\n            clientId=\"425088558519-7bao39kv5na0fhtcp6baiuqartncm82u.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                className=\"login__button\"\r\n              >\r\n                Login with Google\r\n              </button>\r\n            )}\r\n            onSuccess={login}\r\n            onFailure={login}\r\n            isSignedIn={true}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectSignedIn,\r\n  selectUserData,\r\n  setSearchInput,\r\n  setSignedIn,\r\n  setUserData\r\n} from \"../features/userSlice\";\r\nimport \"../styling/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const isSignedIn = useSelector(selectSignedIn);\r\n  const userData = useSelector(selectUserData);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = (response) => {\r\n    dispatch(setSignedIn(false));\r\n    dispatch(setUserData(null));\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setSearchInput(inputValue));\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className=\"navbar__header\">Redux-Blog</h1>\r\n      {isSignedIn && (\r\n        <div className=\"blog__search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search\"\r\n            placeholder=\"Search\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <button className=\"submit\" onClick={handleClick}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isSignedIn ? (\r\n        <div className=\"navbar__user__data\">\r\n          <Avatar src={userData?.imageUrl} alt={userData?.name} />\r\n          <h1 className=\"signedIn\">{userData?.givenName}</h1>\r\n          <GoogleLogout\r\n            clientId=\"425088558519-7bao39kv5na0fhtcp6baiuqartncm82u.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button onClick={renderProps.onClick} className=\"logout__button\">\r\n                Log out\r\n              </button>\r\n            )}\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={logout}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h1 className=\"notSignedIn\">User not available</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router\";\nimport Blogs from \"./components/Blogs\";\nimport HomePage from \"./components/HomePage\";\nimport Navbar from \"./components/Navbar\";\nimport { selectSignedIn } from \"./features/userSlice\";\nimport \"./styling/app.css\";\n\nfunction App() {\n  const isSignedIn = useSelector(selectSignedIn);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <HomePage />\n      {isSignedIn && <Blogs />}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  }\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}